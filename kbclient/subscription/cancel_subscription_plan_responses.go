// Code generated by go-swagger; DO NOT EDIT.

package subscription

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/killbill/kbcli/v3/kbcommon"
)

// CancelSubscriptionPlanReader is a Reader for the CancelSubscriptionPlan structure.
type CancelSubscriptionPlanReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CancelSubscriptionPlanReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewCancelSubscriptionPlanNoContent()
		result.HttpResponse = response
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		errorResult := kbcommon.NewKillbillError(response.Code())
		if err := consumer.Consume(response.Body(), &errorResult); err != nil && err != io.EOF {
			return nil, err
		}
		return nil, errorResult
	}
}

// NewCancelSubscriptionPlanNoContent creates a CancelSubscriptionPlanNoContent with default headers values
func NewCancelSubscriptionPlanNoContent() *CancelSubscriptionPlanNoContent {
	return &CancelSubscriptionPlanNoContent{}
}

/*
CancelSubscriptionPlanNoContent describes a response with status code 204, with default header values.

Successful operation
*/
type CancelSubscriptionPlanNoContent struct {
	HttpResponse runtime.ClientResponse
}

// Code gets the status code for the cancel subscription plan no content response
func (o *CancelSubscriptionPlanNoContent) Code() int {
	return 204
}

// IsSuccess returns true when this cancel subscription plan no content response has a 2xx status code
func (o *CancelSubscriptionPlanNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cancel subscription plan no content response has a 3xx status code
func (o *CancelSubscriptionPlanNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cancel subscription plan no content response has a 4xx status code
func (o *CancelSubscriptionPlanNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this cancel subscription plan no content response has a 5xx status code
func (o *CancelSubscriptionPlanNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this cancel subscription plan no content response a status code equal to that given
func (o *CancelSubscriptionPlanNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *CancelSubscriptionPlanNoContent) Error() string {
	return fmt.Sprintf("[DELETE /1.0/kb/subscriptions/{subscriptionId}][%d] cancelSubscriptionPlanNoContent ", 204)
}

func (o *CancelSubscriptionPlanNoContent) String() string {
	return fmt.Sprintf("[DELETE /1.0/kb/subscriptions/{subscriptionId}][%d] cancelSubscriptionPlanNoContent ", 204)
}

func (o *CancelSubscriptionPlanNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCancelSubscriptionPlanBadRequest creates a CancelSubscriptionPlanBadRequest with default headers values
func NewCancelSubscriptionPlanBadRequest() *CancelSubscriptionPlanBadRequest {
	return &CancelSubscriptionPlanBadRequest{}
}

/*
CancelSubscriptionPlanBadRequest describes a response with status code 400, with default header values.

Invalid subscription id supplied
*/
type CancelSubscriptionPlanBadRequest struct {
	HttpResponse runtime.ClientResponse
}

// Code gets the status code for the cancel subscription plan bad request response
func (o *CancelSubscriptionPlanBadRequest) Code() int {
	return 400
}

// IsSuccess returns true when this cancel subscription plan bad request response has a 2xx status code
func (o *CancelSubscriptionPlanBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cancel subscription plan bad request response has a 3xx status code
func (o *CancelSubscriptionPlanBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cancel subscription plan bad request response has a 4xx status code
func (o *CancelSubscriptionPlanBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this cancel subscription plan bad request response has a 5xx status code
func (o *CancelSubscriptionPlanBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this cancel subscription plan bad request response a status code equal to that given
func (o *CancelSubscriptionPlanBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CancelSubscriptionPlanBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /1.0/kb/subscriptions/{subscriptionId}][%d] cancelSubscriptionPlanBadRequest ", 400)
}

func (o *CancelSubscriptionPlanBadRequest) String() string {
	return fmt.Sprintf("[DELETE /1.0/kb/subscriptions/{subscriptionId}][%d] cancelSubscriptionPlanBadRequest ", 400)
}

func (o *CancelSubscriptionPlanBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCancelSubscriptionPlanNotFound creates a CancelSubscriptionPlanNotFound with default headers values
func NewCancelSubscriptionPlanNotFound() *CancelSubscriptionPlanNotFound {
	return &CancelSubscriptionPlanNotFound{}
}

/*
CancelSubscriptionPlanNotFound describes a response with status code 404, with default header values.

Entitlement not found
*/
type CancelSubscriptionPlanNotFound struct {
	HttpResponse runtime.ClientResponse
}

// Code gets the status code for the cancel subscription plan not found response
func (o *CancelSubscriptionPlanNotFound) Code() int {
	return 404
}

// IsSuccess returns true when this cancel subscription plan not found response has a 2xx status code
func (o *CancelSubscriptionPlanNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cancel subscription plan not found response has a 3xx status code
func (o *CancelSubscriptionPlanNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cancel subscription plan not found response has a 4xx status code
func (o *CancelSubscriptionPlanNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this cancel subscription plan not found response has a 5xx status code
func (o *CancelSubscriptionPlanNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this cancel subscription plan not found response a status code equal to that given
func (o *CancelSubscriptionPlanNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *CancelSubscriptionPlanNotFound) Error() string {
	return fmt.Sprintf("[DELETE /1.0/kb/subscriptions/{subscriptionId}][%d] cancelSubscriptionPlanNotFound ", 404)
}

func (o *CancelSubscriptionPlanNotFound) String() string {
	return fmt.Sprintf("[DELETE /1.0/kb/subscriptions/{subscriptionId}][%d] cancelSubscriptionPlanNotFound ", 404)
}

func (o *CancelSubscriptionPlanNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
